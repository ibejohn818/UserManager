#!/usr/bin/env python

import json
import sys
import subprocess


def git_check():

    e = subprocess.call("git diff-index --quiet HEAD --", shell=True)

    if e > 0:
        return False

    return True

def git_tag(version):

    cmd = 'git commit -a -m "Bump Version: {0}"'.format(version)

    e = subprocess.call(cmd, shell=True)

    cmd  = 'git tag {0}'.format(version)

    e = subprocess.call(cmd, shell=True)

    cmd = 'git push origin {0}'.format(version)

    e = subprocess.call(cmd, shell=True)


def bump(level='rev'):

    filename = "composer.json"

    with open(filename, "r") as jdata:
        d = json.load(jdata)

    version = d['version'].split('.')

    major = int(version[0])
    minor = int(version[1])
    rev = int(version[2])

    if level == 'major':
        major += 1
        minor = 0
        rev = 0
    if level == 'minor':
        minor += 1
        rev = 0
    if level == 'rev':
        rev += 1

    version = '{0}.{1}.{2}'.format(major, minor, rev)

    d['version'] = version

    jdata.close()

    with open(filename, "w") as jdata:
        json.dump(d, jdata, indent=4)
    jdata.close()

    return version

if __name__ == '__main__':

    if not git_check():
        exit("ERROR: Uncommited git changes!")

    levels = ['major', 'minor', 'rev']

    if len(sys.argv) <= 1 or sys.argv[1] not in  levels:
        level = 'rev'
    else:
        level = sys.argv[1]

    ver = bump(level)

    git_tag(ver)
